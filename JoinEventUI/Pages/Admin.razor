@page "/admin"
@using Data;
@using Data.DataObjects;

<h3>Admin</h3>

@if (loggedIn == false)
{
    <form method="post" action="javascript:void(0);">
        <div class="form-group">
            <input type="number" class="form-control form-element" @oninput="@((e) => { SetEventId((string)e.Value); })" placeholder="Event Id" required />
        </div>
        <div class="form-group">
            <input type="password" class="form-control form-element" @bind="@Password" @oninput="@((e) => { Password = (string)e.Value; })" placeholder="Password" required />
        </div>
        <div class="form-group">
            <button @onclick="Login" type="submit" class="btn btn-primary btn-block">Open Event</button>
        </div>
    </form>
}
else
{
<div class="form-row form-element">
    <div class="col-md-2">
        <input @oninput="@((e) => { SearchExpression = (string)e.Value; })" type="search" class="form-control" placeholder="Search" />
    </div>
    <div class="col-md-8">
        <button type="submit" class="btn btn-primary" @onclick="SearchById">21</button>
        <button type="submit" class="btn btn-primary" @onclick="SearchByFullName"><span class="oi oi-person"></span></button>
        <button type="submit" class="btn btn-primary" @onclick="SearchByEmail"><span class="oi oi-envelope-open"></span></button>
        <button type="submit" class="btn btn-primary" @onclick="SearchByPhoneNumber"><span class="oi oi-phone"></span></button>
    </div>
</div>

<table class="table">
    <thead>
        <tr>
            @if (ParticipantsToDisplay.Count > 0)
            {
                <td>
                    Total Records Found:
                </td>
                <td>
                    @ParticipantsToDisplay.Count
                </td>
            }
            else
            {
                <td>
                    No records have been found
                </td>
                <td>
                </td>
            }
            <td>
            </td>
            <td>
                Places Left:
            </td>
            <td>
                @Event.PlacesLeft / @Event.MaxParticipants
            </td>
        </tr>
        <tr>
            <th>
                Id
            </th>
            <th>
                Full Name
            </th>
            <th>
                Email
            </th>
            <th>
                Phone Number
            </th>
            <th>
                Atendee Count
            </th>
            <th>
                Remove
            </th>
        </tr>
    </thead>
    <tbody>
        @foreach (var participant in ParticipantsToDisplay)
        {
            <tr>
                <td>
                    @participant.Id
                </td>
                <td>
                    @participant.FullName
                </td>
                <td>
                    @participant.Email
                </td>
                <td>
                    @participant.PhoneNumber
                </td>
                <td>
                    @participant.AtendeeCount
                </td>
                <td>
                    <button type="button" class="btn btn-danger" @onclick="() => RemoveParticipant(participant.Id)">Remove</button>
                </td>
            </tr>
        }
    </tbody>
</table>
}

@code {
    private int EventId { get; set; }
    private string Password { get; set; } = "";

    private bool loggedIn = false;

    private Event Event { get; set; }

    private List<Participant> Participants { get; set; }
    private List<Participant> ParticipantsToDisplay { get; set; }

    private string SearchExpression { get; set; } = "";

    private void RemoveParticipant(int participantId)
    {
        DataAccess dataAccess = new DataAccess();

        // finding the participant to remove
        Participant participantToRemove = Participants.Where(o => o.Id == participantId).FirstOrDefault();

        // updating list of participants UI
        Participants.Remove(participantToRemove);
        ParticipantsToDisplay.Remove(participantToRemove);

        // updating places left UI
        Event.ParticipantCount -= participantToRemove.AtendeeCount;

        InvokeAsync(StateHasChanged);

        // removing record from database
        dataAccess.RemoveParticipant(participantToRemove.Id, participantToRemove.AtendeeCount, participantToRemove.EventId);
    }

    #region Search
    private void SearchById()
    {
        AdjustSearchExpression();

        var filteredResults = Participants.Where(o => o.Id.ToString().Contains(SearchExpression));
        ParticipantsToDisplay = filteredResults.ToList();

        InvokeAsync(StateHasChanged);
    }

    private void SearchByFullName()
    {
        AdjustSearchExpression();

        var filteredResults = Participants.Where(o => o.FullName.ToLower().Replace(" ", "").Contains(SearchExpression));
        ParticipantsToDisplay = filteredResults.ToList();

        InvokeAsync(StateHasChanged);
    }

    private void SearchByEmail()
    {
        AdjustSearchExpression();

        var filteredResults = Participants.Where(o => o.Email.ToLower().Replace(" ", "").Contains(SearchExpression));
        ParticipantsToDisplay = filteredResults.ToList();

        InvokeAsync(StateHasChanged);
    }

    private void SearchByPhoneNumber()
    {
        AdjustSearchExpression();

        var filteredResults = Participants.Where(o => o.PhoneNumber.Replace(" ", "").Contains(SearchExpression));
        ParticipantsToDisplay = filteredResults.ToList();

        InvokeAsync(StateHasChanged);
    }

    private void AdjustSearchExpression()
    {
        SearchExpression = SearchExpression.ToLower().Replace(" ", "");
    }
    #endregion Search

    private void SetEventId(string idText)
    {
        int id = 0;
        bool success = Int32.TryParse(idText, out id);

        if (success)
        {
            EventId = id;
        }
    }

    private void Login()
    {
        DataAccess dataAccess = new DataAccess();

        Event = dataAccess.GetEvent(EventId);

        if (Event.Password == Password)
        {
            Participants = dataAccess.GetParticipants(Event.Id);

            ParticipantsToDisplay = Participants;

            loggedIn = true;
        }
    }
}
