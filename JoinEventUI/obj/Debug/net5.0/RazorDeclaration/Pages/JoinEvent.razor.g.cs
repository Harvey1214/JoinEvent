// <auto-generated/>
#pragma warning disable 1591
#pragma warning disable 0414
#pragma warning disable 0649
#pragma warning disable 0169

namespace JoinEventUI.Pages
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Components;
#nullable restore
#line 1 "C:\Users\mikuh\source\repos\JoinEvent\JoinEventUI\_Imports.razor"
using System.Net.Http;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\mikuh\source\repos\JoinEvent\JoinEventUI\_Imports.razor"
using Microsoft.AspNetCore.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "C:\Users\mikuh\source\repos\JoinEvent\JoinEventUI\_Imports.razor"
using Microsoft.AspNetCore.Components.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "C:\Users\mikuh\source\repos\JoinEvent\JoinEventUI\_Imports.razor"
using Microsoft.AspNetCore.Components.Forms;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "C:\Users\mikuh\source\repos\JoinEvent\JoinEventUI\_Imports.razor"
using Microsoft.AspNetCore.Components.Routing;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "C:\Users\mikuh\source\repos\JoinEvent\JoinEventUI\_Imports.razor"
using Microsoft.AspNetCore.Components.Web;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "C:\Users\mikuh\source\repos\JoinEvent\JoinEventUI\_Imports.razor"
using Microsoft.AspNetCore.Components.Web.Virtualization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 8 "C:\Users\mikuh\source\repos\JoinEvent\JoinEventUI\_Imports.razor"
using Microsoft.JSInterop;

#line default
#line hidden
#nullable disable
#nullable restore
#line 9 "C:\Users\mikuh\source\repos\JoinEvent\JoinEventUI\_Imports.razor"
using JoinEventUI;

#line default
#line hidden
#nullable disable
#nullable restore
#line 10 "C:\Users\mikuh\source\repos\JoinEvent\JoinEventUI\_Imports.razor"
using JoinEventUI.Shared;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\mikuh\source\repos\JoinEvent\JoinEventUI\Pages\JoinEvent.razor"
using Data;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "C:\Users\mikuh\source\repos\JoinEvent\JoinEventUI\Pages\JoinEvent.razor"
using Microsoft.AspNetCore.WebUtilities;

#line default
#line hidden
#nullable disable
    [Microsoft.AspNetCore.Components.RouteAttribute("/join")]
    public partial class JoinEvent : Microsoft.AspNetCore.Components.ComponentBase
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder)
        {
        }
        #pragma warning restore 1998
#nullable restore
#line 37 "C:\Users\mikuh\source\repos\JoinEvent\JoinEventUI\Pages\JoinEvent.razor"
       
    private Event Event;

    private string FullName { get; set; } = "";
    private string Email { get; set; } = "";
    private string PhoneNumber { get; set; } = "";
    private int AtendeeCount { get; set; } = 0;

    private bool joined = false;
    private bool emailSent = false;

    private void Submit()
    {
        DataAccess dataAccess = new DataAccess();

        if (FullName.Length > 0 && Email.Length > 0 && AtendeeCount > 0 && AtendeeCount <= Event.PlacesLeft)
        {
            dataAccess.InsertParticipant(Event.Id, FullName, Email, PhoneNumber, AtendeeCount);
            dataAccess.UpdateParticipantCount(AtendeeCount, Event.Id);

            joined = true;

            if (Event.HTMLMessage.Length > 0)
            {
                EmailSender.Send(Email, Event.HTMLMessage, Event.Name);
                emailSent = true;
            }

            StateHasChanged();
        }
    }

    private void SetAtendeeCount(string atendeeCountText)
    {
        int atendeeCount = 0;
        bool success = Int32.TryParse(atendeeCountText, out atendeeCount);

        if (success)
        {
            AtendeeCount = atendeeCount;
        }
    }

    protected override void OnInitialized()
    {
        var uri = NavManager.ToAbsoluteUri(NavManager.Uri);

        if (QueryHelpers.ParseQuery(uri.Query).TryGetValue("id", out var _id))
        {
            int eventId = 0;
            bool success = Int32.TryParse(_id, out eventId);

            if (success)
            {
                SetEvent(eventId);
            }
        }
    }

    private void SetEvent(int id)
    {
        DataAccess dataAccess = new DataAccess();

        Event = dataAccess.GetEvent(id);
    }

#line default
#line hidden
#nullable disable
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private NavigationManager NavManager { get; set; }
    }
}
#pragma warning restore 1591
